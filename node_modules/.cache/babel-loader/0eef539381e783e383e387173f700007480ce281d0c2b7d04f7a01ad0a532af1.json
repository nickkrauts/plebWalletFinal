{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/repos/plebDev1/pleb-wallet-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [price, setPrice] = useState(0);\n  const getPrice = () => {\n    // Axios is a library that makes it easy to make http requests\n    // After we make a request, we can use the .then() method to handle the response asychronously\n    // This is an alternative to using async/await\n    axios.get(\"https://api.coinbase.com/v2/prices/BTC-USD/spot\")\n    // .then is a promise that will run when the API call is successful\n    .then(res => {\n      console.log(res.data.data.amount);\n      setPrice(res.data.data.amount);\n      // updateChartData(res.data.data.amount);\n    })\n    // .catch is a promise that will run if the API call fails\n    .catch(err => {\n      console.log(err);\n    });\n  };\n  //Make API request fire every n seconds\n  useEffect(() => {\n    getPrice();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"$\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iFUZSRAb9ibYi8LU9CUAlPfDQ9Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","App","price","setPrice","getPrice","get","then","res","console","log","data","amount","catch","err"],"sources":["/home/ubuntu/repos/plebDev1/pleb-wallet-react/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n\n  const [price, setPrice] = useState(0);\n  const getPrice = () => {\n    // Axios is a library that makes it easy to make http requests\n    // After we make a request, we can use the .then() method to handle the response asychronously\n    // This is an alternative to using async/await\n    axios\n      .get(\"https://api.coinbase.com/v2/prices/BTC-USD/spot\")\n      // .then is a promise that will run when the API call is successful\n      .then((res) => {\n        console.log(res.data.data.amount);\n        setPrice(res.data.data.amount);\n       // updateChartData(res.data.data.amount);\n      })\n      // .catch is a promise that will run if the API call fails\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  //Make API request fire every n seconds\n  useEffect(() => {\n    getPrice();\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>${price}</h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMK,QAAQ,GAAG,MAAM;IACrB;IACA;IACA;IACAJ,KAAK,CACFK,GAAG,CAAC,iDAAiD;IACtD;IAAA,CACCC,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,MAAM,CAAC;MACjCR,QAAQ,CAACI,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,MAAM,CAAC;MAC/B;IACD,CAAC;IACD;IAAA,CACCC,KAAK,CAAEC,GAAG,IAAK;MACdL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC;EACD;EACAf,SAAS,CAAC,MAAM;IACdM,QAAQ,EAAE;EAEZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAA,gBAAMF,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QACb;AAEV;AAAC,GA/BQD,GAAG;AAAA,KAAHA,GAAG;AAiCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}